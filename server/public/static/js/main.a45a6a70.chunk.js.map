{"version":3,"sources":["nebular/utils/api.js","nebular/components/header.js","nebular/components/roleDetail.js","nebular/components/addRole.js","nebular/App.js","serviceWorker.js","index.js"],"names":["api","API","Object","classCallCheck","this","baseurl","axios","get","then","response","data","term","repo","post","id","delete","Header","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","user","username","_this2","setState","react_default","a","createElement","className","href","type","name","placeholder","value","props","search","onChange","onSearch","React","Component","RoleDetailModal","meta","Meta","metaType","MetaType","url","Server","Namespace","Repo","tags","console","log","undefined","GalaxyInfo","GalaxyTags","Modal","assign","dialogClassName","aria-labelledby","centered","closeButton","style","paddingBottom","Title","position","top","Description","Body","Tabs","defaultActiveKey","Tab","eventKey","title","Table","MinAnsibleVersion","Author","Company","License","Row","Col","ListGroup","Dependencies","map","dependency","i","Item","key","Src","Platforms","Name","Versions","v","j","react_markdown_default","source","Readme","Footer","tag","AddRoleModal","default","Repository","handleChange","bind","assertThisInitialized","close","addModel","event","defineProperty","target","onHide","create","refresh","settings","Form","OverlayTrigger","placement","overlay","Tooltip","Control","Button","variant","onClick","block","CustomToggle","context","handleClick","e","preventDefault","children","Nebular","handleSearch","getAll","roles","modalShow","modalAddShow","getRoles","_this3","_this4","update","_this5","header_Header","roleDetail_RoleDetailModal","show","addRole_AddRoleModal","role","Dropdown","Toggle","as","Menu","ID","Boolean","window","location","hostname","match","ReactDOM","render","nebular_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a45a6a70.chunk.js","sourcesContent":["import axios from 'axios'\n\nclass API {\n    constructor() {\n        this.baseurl = \"\"\n        if (process.env.NODE_ENV === 'development') {\n            this.baseurl = \"http://localhost:8080\"\n        }\n    }\n    getAll(){\n        return axios.get(this.baseurl+\"/search\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    settings(){\n        return axios.get(this.baseurl+\"/settings\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    search(term){\n        return axios.get(this.baseurl+\"/search/\"+term).then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    create(repo){\n        return axios.post(this.baseurl+\"/roles\", repo).then(response => {            \n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    delete(id){\n        return axios.delete(this.baseurl+\"/roles/\"+id).then(response => {            \n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    update(id){\n        return axios.get(this.baseurl+\"/roles/update/\"+id).then(response => {            \n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n    user(){\n        return axios.get(this.baseurl+\"/user\").then(response => {\n            // returning the data here allows the caller to get it through another .then(...)\n            return (response.data)\n        })\n    }\n\n}\nconst api = new API()\nexport {api}","import React from 'react';\nimport {api} from \"../utils/api\";\n\nexport default class Header extends React.Component {\n    constructor(...args) {\n        super(...args);\n        this.state = {user:{username:\"\"}};\n    }\n\n    user(){\n        api.user().then( data =>{\n            this.setState({user:data})\n        })\n    }\n    componentDidMount() {\n        this.user();\n      } \n    \n          \n    render() {\n      return (\n            <header>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top \">\n                    <div className=\"d-flex w-50 order-0\">\n                        <a className=\"navbar-brand mr-1\" href=\"/\">Nebular</a>\n                    </div>\n                    <div className=\"justify-content-center order-2\" id=\"collapsingNavbar\">\n                    <div className=\"d-flex justify-content-center h-100\">\n                    <div className=\"searchbar\">\n                    <input className=\"search_input\" type=\"text\" name=\"search\" placeholder=\"Search...\" value={this.props.search} onChange={this.props.onSearch} />\n                    <a href=\"/\" className=\"search_icon\"><i className=\"fa fa-search\"></i></a>\n                    </div>\n                </div>\n                    </div>\n                    <div className=\"mt-1 w-50 text-right order-1 order-md-last text-white\">{this.state.user.username}</div>\n                </nav>\n        </header>\n      );\n    }\n  }\n\n\n","import React from 'react';\nimport { Modal, ListGroup, Row, Col, Tabs, Tab, Table } from 'react-bootstrap';\nimport  Markdown  from 'react-markdown'\n\nexport default class RoleDetailModal extends React.Component {\n    render() {\n      let meta = this.props.data.Meta;\n      let metaType = this.props.data.MetaType;\n      const url = this.props.data.Server+'/'+this.props.data.Namespace+'/'+this.props.data.Repo\n      let tags = []\n      console.log(this.props.data)\n      if((this.props.data.Meta.GalaxyInfo.GalaxyTags !== undefined)&&(this.props.data.Meta.GalaxyInfo.GalaxyTags !== null)){\n        tags = this.props.data.Meta.GalaxyInfo.GalaxyTags\n      }\n      \n      return (\n        <Modal\n          {...this.props}\n          dialogClassName=\"modal-900w modal-height\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n         <Modal.Header closeButton style={{paddingBottom:\"35px\"}}>\n            <Modal.Title>{this.props.data.Repo}</Modal.Title>\n            <p style={{position:'absolute', top: \"50px\"}}>{this.props.data.Meta.GalaxyInfo.Description}</p>\n          </Modal.Header>\n          <Modal.Body>\n            <Tabs defaultActiveKey=\"details\" id=\"uncontrolled-tab-example\">\n              <Tab eventKey=\"details\" title=\"Details\">\n              <Table>\n                <tbody>\n                  <tr>\n                    <td>Repo Url: </td>\n                    <td><a href={url}>{url}</a></td>\n                  </tr>\n                  <tr>\n                    <td>Minimum Ansible Version: </td>\n                    <td>{this.props.data.Meta.GalaxyInfo.MinAnsibleVersion}</td>\n                  </tr>\n                  <tr>\n                    <td>Author</td>\n                    <td>{this.props.data.Meta.GalaxyInfo.Author}</td>\n                  </tr>\n                  <tr>\n                    <td>Company</td>\n                    <td>{this.props.data.Meta.GalaxyInfo.Company}</td>\n                  </tr>\n                  <tr>\n                    <td>License</td>\n                    <td>{this.props.data.Meta.GalaxyInfo.License}</td>\n                  </tr>\n                </tbody>\n              </Table>\n              <hr/>\n              <Row>\n                <Col>\n                  <h5>Dependancies:</h5>\n                  <ListGroup>         \n                  {meta.Dependencies.map((dependency, i) => {\n                    if (metaType === \"COMPLEX\"){\n                      return (<ListGroup.Item key={i}><a href={dependency.Src}>{dependency.Src}</a></ListGroup.Item>)\n                    } else {\n                      return (<ListGroup.Item key={i}>{dependency}</ListGroup.Item>)\n                    }\n                  })}\n                  </ListGroup>\n                </Col>\n                <Col>\n                  <h5>Versions:</h5>\n                  <ListGroup>\n                  {this.props.data.Meta.GalaxyInfo.Platforms.map((dependency, i) => (\n                    <ListGroup.Item key={i}>\n                      {dependency.Name}: \n                      <span className=\"version\">\n                      {dependency.Versions.map((v, j) => (\n                        <i key={j}> {v} </i>\n                      ))}\n                      </span>\n                    </ListGroup.Item>\n                  ), this)}\n                  </ListGroup>\n                </Col>\n              </Row>\n              </Tab>\n              <Tab eventKey=\"readme\" title=\"ReadMe\" className=\"readme\">\n                    <Markdown source={this.props.data.Readme} />\n              </Tab>\n            </Tabs>\n          </Modal.Body>\n          <Modal.Footer>\n          <div className=\"tags\">\n            {tags.map((tag, i) => (\n              <i key={i}>{tag}</i>\n            ))}\n          </div>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }","import React from 'react';\nimport {api} from \"../utils/api\";\nimport { Modal, Button, Form, Col, OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nexport default class AddRoleModal extends React.Component {\n\n    constructor(...args) {\n      super(...args);\n      this.default = { Server:\"https://github.com\", Namespace:\"\", Repository:\"\" }\n      this.state = this.default;\n      this.handleChange = this.handleChange.bind(this);\n      this.close = this.close.bind(this);\n      this.addModel = this.addModel.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({ [event.target.name]: event.target.value });\n    }\n  \n    close(){\n      this.setState(this.default)\n      this.props.onHide()\n    }\n  \n    addModel(){\n      let _this = this;\n      api.create({\n        \"Server\": this.state.Server,\n        \"Namespace\": this.state.Namespace,\n        \"Repo\": this.state.Repository\n      }).then(data =>{ \n        console.log(data)\n        _this.props.refresh()\n        _this.props.onHide()\n  \n      })\n    }\n    settings(){\n      api.settings().then( data =>{\n        console.log(data)\n          this.setState({Server:data[\"git_server\"], Namespace:data[\"git_namespace\"]})\n      })\n    }\n    componentDidMount() {\n      this.settings();\n    } \n  \n    render() {\n      return (\n        <Modal\n          {...this.props}\n          dialogClassName=\"modal-900w\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Body>\n          <Form>\n            <Form.Row>\n              <Col>\n                <OverlayTrigger key='top' placement='top' overlay={<Tooltip id={`tooltip-top`}>https://github.com</Tooltip>}>\n                  <Form.Control placeholder=\"https://github.com\" name=\"Server\" value={this.state.Server} onChange={this.handleChange} />\n                </OverlayTrigger>\n              </Col>\n              <Col>\n                <OverlayTrigger key='top' placement='top' overlay={<Tooltip id={`tooltip-top`}>galaxy</Tooltip>}>\n                  <Form.Control placeholder=\"Namespace\" name=\"Namespace\" value={this.state.Namespace} onChange={this.handleChange} />\n                </OverlayTrigger>\n              </Col>\n              <Col>\n                <OverlayTrigger key='top' placement='top' overlay={<Tooltip id={`tooltip-top`}>ansible-role</Tooltip>}>\n                  <Form.Control placeholder=\"Repository\" name=\"Repository\" value={this.state.Repository} onChange={this.handleChange} />\n                </OverlayTrigger>\n              </Col>\n            </Form.Row>\n          </Form>\n          </Modal.Body>\n          <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\" onClick={this.addModel} block>Submit</Button>\n            <Button onClick={this.close}>Close</Button>\n          </Modal.Footer>\n        </Modal>\n      );\n    }\n  }","import React from 'react';\nimport {api} from \"./utils/api\";\nimport './App.css';\n\nimport Header from './components/header'\nimport RoleDetailModal from './components/roleDetail'\nimport AddRoleModal from './components/addRole'\n\nimport { Dropdown, Col, Row} from 'react-bootstrap';\n\n\n\n\nclass CustomToggle extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick(e) {\n    e.preventDefault();\n    this.props.onClick(e);\n  }\n  render() {\n    return (\n      <a href=\"/\" onClick={this.handleClick} className=\"dropdownToggle\">\n        {this.props.children}\n      </a>\n    );\n  }\n}\n\nclass Nebular extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.state = { \n      roles: [], \n      search:\"\", \n      user:{username:\"\"},\n      modalShow: false, \n      modalAddShow: false, \n      data:{\n        Meta:{\n          Dependencies: [],\n          GalaxyInfo:{\n            Platforms: [],\n            GalaxyTags:[]\n          }\n        }\n      }\n    };\n    this.getRoles = this.getRoles.bind(this);\n  }\n\n  getRoles(){\n    api.getAll().then( data =>{\n      this.setState({roles:data})\n    }\n    )\n  }\n\n  search(){\n    api.search(this.state.search).then( data =>{\n      this.setState({roles:data})\n    })\n  }\n\n  \n  componentDidMount() {\n    this.getRoles();\n    \n  } \n\n  handleSearch = (event) => {\n    if(event === undefined){return}\n    this.setState({search: event.target.value});\n    console.log(event.target.value)\n    if(event.target.value===\"\"){\n      api.getAll().then( data =>{\n        this.setState({roles:data})\n      })\n    }else{\n      api.search(event.target.value).then( data =>{\n        this.setState({roles:data})\n      })\n    }\n    \n  }\n\n  delete(id){\n    let _this = this;\n    console.log(\"deleting\", id)\n    api.delete(id).then(data =>{\n      console.log(data)\n      _this.getRoles()\n    }) \n  }\n\n  update(id){\n    let _this = this;\n    console.log(\"updating\", id)\n    api.update(id).then(data =>{\n      console.log(data)\n      _this.getRoles()\n    }) \n  }\n\n  render() {\n    let modalClose = () => this.setState({ modalShow: false });\n    let modalAddClose = () => this.setState({ modalAddShow: false });\n    return (\n    <div>\n      <Header search={this.state.search} onSearch={this.handleSearch}/>\n      <RoleDetailModal show={this.state.modalShow} onHide={modalClose} data={this.state.data}/>\n      <AddRoleModal show={this.state.modalAddShow} onHide={modalAddClose} refresh={this.getRoles}/>\n      <button type=\"button\" onClick={() => this.setState({ modalAddShow: true })} className=\"btn btn-primary btn-circle\"><i className=\"fa fa-plus\"></i></button>\n      <main role=\"main\" className=\"container\">\n        <div className=\"rolelist\">\n              {this.state.roles.map((repo, i) => (\n                <div className=\"card\" key={i} >\n                <div className=\"card-body\">\n                <Row>\n                <Col>\n                  <a className=\"roleName\" onClick={() => this.setState({ modalShow: true, data:repo })}>\n                  {repo.Namespace}.{repo.Repo} | {repo.Meta.GalaxyInfo.Description}\n                  </a>\n                </Col>\n                <div className=\"forceRight\">\n                <Dropdown>\n                  <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n                  <i className=\"fa fa-ellipsis-v\"></i>\n                  </Dropdown.Toggle>\n                      <Dropdown.Menu>\n                      <Dropdown.Item onClick={() => this.delete(repo.ID)}>Delete Role</Dropdown.Item>\n                      <Dropdown.Item onClick={() => this.update(repo.ID)}>Refresh Role</Dropdown.Item>\n                    </Dropdown.Menu>\n                  </Dropdown> \n                </div>\n                </Row>\n                </div>\n                </div>\n                ), this)}\n      </div>\n    </main>\n\n    <footer className=\"footer\">\n      <div className=\"container\">\n        <span className=\"text-muted\">Nebular crated by @robrobotheram</span>\n      </div>\n    </footer>\n  </div>\n\n);\n}\n}\n\n\nexport default Nebular;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport Nebular from './nebular/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Nebular />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}